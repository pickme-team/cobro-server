@page "/auth"
@using Blazored.LocalStorage
@using Prod.Exceptions
@using Prod.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage
@inject IJwtService JwtService
@rendermode InteractiveServer
@code {
    private readonly SignInRequest _signInRequest = new SignInRequest();
    private readonly SignUpRequest _signUpRequest = new SignUpRequest();
    private string? _errorMessage;

    private async Task HandleSignIn()
    {
        try
        {
            var response = await AuthService.SignIn(_signInRequest);
            if (!response.Admin)
                throw new Exception("Вы не админ");
            var user = JwtService.GetUserFromToken(response.Token);
            await LocalStorage.SetItemAsync("adminId", user.Id.ToString());
            Navigation.NavigateTo("/");
        }
        catch (UnauthorizedException ex)
        {
            _errorMessage = $"Неверно введёна почта или пароль";
        }
        catch (Exception ex)
        {
            _errorMessage = $"Ошибка: {ex.Message}";
        }
    }
}

<h3>Вход</h3>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="alert alert-danger">@_errorMessage</div>
}

<EditForm Model="@_signInRequest" OnValidSubmit="HandleSignIn" style="display: block;" FormName="SignInForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Электронная почта</label>
        <InputText @bind-Value="_signInRequest.Email" class="form-control" />
    </div>
    <div>
        <label>Пароль</label>
        <InputText @bind-Value="_signInRequest.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Войти</button>
</EditForm>
