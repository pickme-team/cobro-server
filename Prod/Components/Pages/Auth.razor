@page "/auth"
@using Prod.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer
@code {
    private readonly SignInRequest _signInRequest = new SignInRequest();
    private readonly SignUpRequest _signUpRequest = new SignUpRequest();
    private bool _isSignUpMode;
    private string? _errorMessage;

    private async Task HandleSignIn()
    {
        try
        {
            var response = await AuthService.SignIn(_signInRequest);
            await AuthService.SetTokenAsync(response.Token);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            _errorMessage = $"Ошибка: {ex.Message}";
        }
    }

    private async Task HandleSignUp()
    {
        try
        {
            var response = await AuthService.SignUp(_signUpRequest);
            await AuthService.SetTokenAsync(response.Token);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            _errorMessage = $"Ошибка: {ex.Message}";
        }
    }

    private string GetSignInFormStyle() => _isSignUpMode ? "display: none;" : "display: block;";
    private string GetSignUpFormStyle() => _isSignUpMode ? "display: block;" : "display: none;";
}

<h3>@(_isSignUpMode ? "Регистрация" : "Вход")</h3>

@if (!string.IsNullOrEmpty(_errorMessage))
{
    <div class="alert alert-danger">@_errorMessage</div>
}

<EditForm Model="@_signInRequest" OnValidSubmit="HandleSignIn" style="@GetSignInFormStyle()" FormName="SignInForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Электронная почта</label>
        <InputText @bind-Value="_signInRequest.Email" class="form-control" />
    </div>
    <div>
        <label>Пароль</label>
        <InputText @bind-Value="_signInRequest.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Войти</button>
    <button type="button" class="btn btn-link" @onclick="() => _isSignUpMode = true">Зарегистрироваться</button>
</EditForm>

<EditForm Model="@_signUpRequest" OnValidSubmit="HandleSignUp" style="@GetSignUpFormStyle()" FormName="SignUpForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Имя</label>
        <InputText @bind-Value="_signUpRequest.Name" class="form-control" />
    </div>
    <div>
        <label>Электронная почта</label>
        <InputText @bind-Value="_signUpRequest.Email" class="form-control" />
    </div>
    <div>
        <label>Пароль</label>
        <InputText @bind-Value="_signUpRequest.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
    <button type="button" class="btn btn-link" @onclick="() => _isSignUpMode = false">Войти</button>
</EditForm>
