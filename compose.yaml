services:
  prod:
    image: gitlab.prodcontest.ru:5050/team-21/3bd/prod:latest
    env_file:
      - Prod/.env
    build:
      context: .
      dockerfile: Prod/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "80:8080"

  postgres:
    image: postgres:latest
    env_file:
      - Prod/.env
    ports:
      - "8050:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydatabase" ]
      interval: 1s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "8071:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "8051:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8052:3000"
    env_file:
      - Prod/.env
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana

  jaeger:
    restart: always
    image: jaegertracing/all-in-one:1.52
    depends_on:
      - elasticsearch
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    ports:
      - "8070:4317"
      - "8071:16686"
      - "8072:4318"

  elasticsearch:
    restart: always
    image: elasticsearch:7.17.28
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./elasticsearch/conf.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "8073:9200"

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    ports:
      - "8074:3100"
    env_file:
      - Prod/.env
    volumes:
      - ./loki.yml:/etc/loki/loki.yml
      - loki_data:/etc/loki

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:
  loki_data:
  elasticsearch-data:
